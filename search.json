[{"path":[]},{"path":"https://remi-daigle.github.io/marxanr/articles/workflow_MPAs.html","id":"spatial-data","dir":"Articles","previous_headings":"Loading data layers","what":"Spatial data","title":"Example workflow - DFO Maritimes MPAs","text":"","code":"data(pu)  # landmasses for plotting data(land)  # x and y limits to make nicer plots xlim <- st_bbox(pu)[c(1,3)] ylim <- st_bbox(pu)[c(2,4)] ggcoords <- coord_sf(xlim=xlim,            ylim=ylim)  basemap <- ggplot(land)+   geom_sf()  basemap+   geom_sf(data=pu)+   ggcoords"},{"path":"https://remi-daigle.github.io/marxanr/articles/workflow_MPAs.html","id":"marxan-data","dir":"Articles","previous_headings":"Loading data layers","what":"Marxan data","title":"Example workflow - DFO Maritimes MPAs","text":"Data example, included package, derived Serdynska et al. 2021 used example. data available bioregional-scale ecological human use data used inform draft Marine Protected Area (MPA) design Scotian Shelf-Bay Fundy Bioregion. Please see original technical report details. input data “real”, following example interpreted way suggestion real MPA placement. example show CAN run Marxan via R real data. example properly paramaterized optimized.","code":"data(\"spec\") data(\"puvspr\") data(\"pu_dat\") data(\"bound\")  head(spec) #>   id prop  spf                       name #> 1  1  0.3 1000               Boltenia_KDE #> 2  2  0.3 1000         LargeGorgonian_KDE #> 3  3  0.3 1000         LargeGorgonian_SDM #> 4  4  0.3 1000 OtherSponges_noVazella_KDE #> 5  5  0.3 1000             SandDollar_KDE #> 6  6  0.3 1000                SeaPens_KDE head(puvspr) #> # A tibble: 6 × 3 #> # Groups:   species [1] #>   species pu       amount #>     <int> <chr>     <dbl> #> 1       1 1695  16481748. #> 2       1 1715  36180234. #> 3       1 1718   4545594. #> 4       1 1738  14234663. #> 5       1 1739    224554. #> 6       1 1741  50303463. head(pu_dat) #> # A tibble: 6 × 5 #>   id      cost status  xloc  yloc #>   <chr>  <dbl>  <dbl> <dbl> <dbl> #> 1 1     10000       0  42.8 -67.7 #> 2 2     10179.      0  43.0 -67.7 #> 3 3     10000       0  42.5 -67.7 #> 4 4     10000       0  42.7 -67.7 #> 5 5     11164.      0  42.9 -67.7 #> 6 6     10041.      0  43.1 -67.7 head(bound) #>   id1 id2 amount #> 1   1   1      1 #> 2   1   4      1 #> 3   1   5      1 #> 4   1  10      1 #> 5   2   2      1 #> 6   2   5      1"},{"path":"https://remi-daigle.github.io/marxanr/articles/workflow_MPAs.html","id":"creating-a-marxan-project-folder","dir":"Articles","previous_headings":"","what":"Creating a Marxan project folder","title":"Example workflow - DFO Maritimes MPAs","text":"","code":"# name for new scenario scen <- \"MPAtest\" # create a folder for a new scenario createMarxanFolder(scen=scen,dialog = FALSE)  # download marxan if necessary downloadMarxan(path = scen)  # write marxan files to folder write.csv(spec,file.path(scen,\"input\",\"spec.dat\"),quote = FALSE,row.names = FALSE) write.csv(puvspr,file.path(scen,\"input\",\"puvspr.dat\"),quote = FALSE,row.names = FALSE) write.csv(pu_dat,file.path(scen,\"input\",\"pu.dat\"),quote = FALSE,row.names = FALSE) write.csv(bound,file.path(scen,\"input\",\"bound.dat\"),quote = FALSE,row.names = FALSE)  # create new input parameters input <- newParams(BLM=10^5,NUMREPS = 50L,SCENNAME = scen) writeParams(inputdat = input,file = file.path(scen,\"input.dat\"))  # run marxan runMarxan(marxanpath = scen,           inputdatfile = \"input.dat\") # unlink(scen,recursive = TRUE) # if necessary"},{"path":"https://remi-daigle.github.io/marxanr/articles/workflow_MPAs.html","id":"plotting-results","dir":"Articles","previous_headings":"","what":"Plotting results","title":"Example workflow - DFO Maritimes MPAs","text":"","code":"ssoln <- read.csv(file.path(scen,\"output\",paste0(scen,\"_ssoln.csv\"))) %>%   mutate(planning_unit = as.character(planning_unit)) %>%   right_join(pu,by=c(\"planning_unit\"=\"id\")) %>%    st_as_sf() basemap+   geom_sf(data = ssoln, aes(fill=number))+   ggcoords best <- read.csv(file.path(scen,\"output\",paste0(scen,\"_best.csv\"))) %>%   mutate(PUID = as.character(PUID)) %>%   right_join(pu,by=c(\"PUID\"=\"id\")) %>%    st_as_sf() basemap+   geom_sf(data = best, aes(fill=SOLUTION))+   ggcoords"},{"path":"https://remi-daigle.github.io/marxanr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Remi Daigle. Maintainer.","code":""},{"path":"https://remi-daigle.github.io/marxanr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Daigle R (2023). marxanr: R interface Marxan. R package version 0.1.0, https://remi-daigle.github.io/marxanr/.","code":"@Manual{,   title = {marxanr: An R interface for Marxan},   author = {Remi Daigle},   year = {2023},   note = {R package version 0.1.0},   url = {https://remi-daigle.github.io/marxanr/}, }"},{"path":"https://remi-daigle.github.io/marxanr/index.html","id":"marxanr","dir":"","previous_headings":"","what":"An R interface for Marxan","title":"An R interface for Marxan","text":"goal marxanr help users prepare input files running Marxan, interpret results reproducible workflow R. package development.","code":""},{"path":"https://remi-daigle.github.io/marxanr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R interface for Marxan","text":"can install development version marxanr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"remi-daigle/marxanr\")"},{"path":"https://remi-daigle.github.io/marxanr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"An R interface for Marxan","text":"basic example shows solve common problem:","code":"library(marxanr)  # create a folder for a new scenario scen <- \"MarxanData\" dir.create(scen)  # download marxan if necessary downloadMarxan(path = scen)  # download example data: temp <- tempfile() download.file(\"https://github.com/Marxan-source-code/marxan/releases/download/v4.0.6/MarxanData.zip\",               destfile = temp)  unzip(temp,exdir = getwd()) unlink(temp)  # create new input parameters input <- newParams(NUMREPS = 5L,SCENNAME = scen,PUVSPRNAME = \"puvsp.dat\") writeParams(inputdat = input,file = \"input_demo.dat\")  # run marxan runMarxan(marxanpath = scen,           inputdatfile = \"input_demo.dat\")  unlink(scen,recursive = TRUE)"},{"path":"https://remi-daigle.github.io/marxanr/reference/bound.html","id":null,"dir":"Reference","previous_headings":"","what":"bound — bound","title":"bound — bound","text":"boundary length file (e.g. bound.dat)","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/bound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bound — bound","text":"","code":"bound"},{"path":"https://remi-daigle.github.io/marxanr/reference/bound.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"bound — bound","text":"data frame 18488 rows 3 variables: id1 integer planning unit ID id2 integer planning unit ID planning unit neighbours one id1 amount double relative importance including planning unit id2 one id1 selected.","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/bound.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bound — bound","text":"R script create data [data-raw/bound.R](https://github.com/remi-daigle/marxanr/blob/main/data-raw/bound.R)","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/costs.html","id":null,"dir":"Reference","previous_headings":"","what":"costs — costs","title":"costs — costs","text":"Sum fisheries landings (WEIGHTMT) [Serdynska et al. 2021](https://open.canada.ca/data/en/dataset/2d9cce9a-d634-4b49-879f-87c40c52acf2) used example. data available bioregional-scale ecological human use data used inform draft Marine Protected Area (MPA) design Scotian Shelf-Bay Fundy Bioregion. Please see [original technical report](https://publications.gc.ca/collections/collection_2021/mpo-dfo/Fs97-6-3382-eng.pdf) details. spatial data modified/simplified demonstration purposes used purpose.","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/costs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"costs — costs","text":"","code":"costs"},{"path":"https://remi-daigle.github.io/marxanr/reference/costs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"costs — costs","text":"data frame 48815 rows 2 variables: WEIGHTMT double Sum fisheries landings geometry list simple features column (sfc) describing grid cells","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/costs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"costs — costs","text":"R script download/create data [data-raw/costs.R](https://github.com/remi-daigle/marxanr/blob/main/data-raw/costs.R)","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/createMarxanFolder.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Marxan folder — createMarxanFolder","title":"Create a Marxan folder — createMarxanFolder","text":"Create Marxan folder","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/createMarxanFolder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Marxan folder — createMarxanFolder","text":"","code":"createMarxanFolder(   wd = getwd(),   scen = \"demo\",   input = \"input\",   output = \"output\",   dialog = TRUE )"},{"path":"https://remi-daigle.github.io/marxanr/reference/createMarxanFolder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Marxan folder — createMarxanFolder","text":"wd directory like create new Marxan folder. Defaults current working directory (.e. `getwd()`) scen name new Marxan folder. Defaults \"demo\" input name input folder inside new Marxan folder. Defaults \"input\" output name input folder inside new Marxan folder. Defaults \"output\" dialog Overide system dialog. default TRUE leave dialog , FALSE turn dialog .","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/createMarxanFolder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Marxan folder — createMarxanFolder","text":"new directory","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/createMarxanFolder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Marxan folder — createMarxanFolder","text":"","code":"if (FALSE) { createMarxanFolder(scen=\"testingnewfolders\") }"},{"path":"https://remi-daigle.github.io/marxanr/reference/downloadMarxan.html","id":null,"dir":"Reference","previous_headings":"","what":"downloadMarxan — downloadMarxan","title":"downloadMarxan — downloadMarxan","text":"Download Marxan releases [github repository](https://github.com/Marxan-source-code/marxan/releases)","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/downloadMarxan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"downloadMarxan — downloadMarxan","text":"","code":"downloadMarxan(os = \"win\", path = getwd(), ver = \"4.0.6\")"},{"path":"https://remi-daigle.github.io/marxanr/reference/downloadMarxan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"downloadMarxan — downloadMarxan","text":"os character operating system. Either \"win\" (default), \"linux\", \"macos\", \"macosM1\" path character string destination path. Defaults current working directory. ver character string version number. Default \"4.0.6\"","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/downloadMarxan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"downloadMarxan — downloadMarxan","text":"files","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/downloadMarxan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"downloadMarxan — downloadMarxan","text":"","code":"if (FALSE) { downloadMarxan(os=\"win\") }"},{"path":"https://remi-daigle.github.io/marxanr/reference/ecolayers.html","id":null,"dir":"Reference","previous_headings":"","what":"ecolayers — ecolayers","title":"ecolayers — ecolayers","text":"Ecological data layers [Serdynska et al. 2021](https://open.canada.ca/data/en/dataset/2d9cce9a-d634-4b49-879f-87c40c52acf2) used example. data available bioregional-scale ecological human use data used inform draft Marine Protected Area (MPA) design Scotian Shelf-Bay Fundy Bioregion. Please see [original technical report](https://publications.gc.ca/collections/collection_2021/mpo-dfo/Fs97-6-3382-eng.pdf) details. spatial data modified/simplified demonstration purposes used purpose.","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/ecolayers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ecolayers — ecolayers","text":"","code":"ecolayers"},{"path":"https://remi-daigle.github.io/marxanr/reference/ecolayers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ecolayers — ecolayers","text":"data frame 78 rows 2 variables: layer character ecolayer id geometry list geometry column (sfc)","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/ecolayers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ecolayers — ecolayers","text":"R script download/create data [data-raw/ecolayers.R](https://github.com/remi-daigle/marxanr/blob/main/data-raw/ecolayers.R)","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/land.html","id":null,"dir":"Reference","previous_headings":"","what":"land — land","title":"land — land","text":"sf object describing land near MPA workflow vignette. Cropped rnaturalearth package.","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/land.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"land — land","text":"","code":"land"},{"path":"https://remi-daigle.github.io/marxanr/reference/land.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"land — land","text":"data frame 3 rows 2 variables: name character Country name geometry list simple features column (sfc) describing land","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/land.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"land — land","text":"R script create data [data-raw/land.R](https://github.com/remi-daigle/marxanr/blob/main/data-raw/land.R)","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/marxanParams-class.html","id":null,"dir":"Reference","previous_headings":"","what":"marxanParams: class that represents the Marxan Input Paramaters — marxanParams-class","title":"marxanParams: class that represents the Marxan Input Paramaters — marxanParams-class","text":"marxanParams: class represents Marxan Input Paramaters","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/marxanParams-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"marxanParams: class that represents the Marxan Input Paramaters — marxanParams-class","text":"class","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/marxanParams-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"marxanParams: class that represents the Marxan Input Paramaters — marxanParams-class","text":"BLM numeric. PROP numeric. RANDSEED numeric. NUMREPS integer. NUMITNS integer. STARTTEMP numeric. NUMTEMP numeric. COSTTHRESH numeric. THRESHPEN1 numeric. THRESHPEN2 numeric. INPUTDIR character. PUNAME character. SPECNAME character. PUVSPRNAME character. BOUNDNAME character. SCENNAME character. SAVERUN integer. SAVEBEST integer. SAVESUMMARY integer. SAVESCEN integer. SAVETARGMET integer. SAVESUMSOLN integer. SAVEPENALTY integer. SAVELOG integer. OUTPUTDIR character. RUNMODE integer. MISSLEVEL integer. ITIMPTYPE integer. HEURTYPE integer. CLUMPTYPE integer. VERBOSITY integer. SAVESOLUTIONSMATRIX integer.","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/newParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new Marxan Input Parameter File (input.dat). See the [Marxan User Manual](https://marxansolutions.org/wp-content/uploads/2021/02/Marxan-User-Manual_2021.pdf) for more information:\nSerra, N., Kockel, A., Game, E. T., Grantham H., Possingham H.P., & McGowan, J. (2020). Marxan User Manual: For Marxan version 2.43 and above. The Nature Conservancy (TNC), Arlington, Virginia, United States and Pacific Marine Analysis and Research Association (PacMARA), Victoria, British Columbia, Canada. — newParams","title":"Create new Marxan Input Parameter File (input.dat). See the [Marxan User Manual](https://marxansolutions.org/wp-content/uploads/2021/02/Marxan-User-Manual_2021.pdf) for more information:\nSerra, N., Kockel, A., Game, E. T., Grantham H., Possingham H.P., & McGowan, J. (2020). Marxan User Manual: For Marxan version 2.43 and above. The Nature Conservancy (TNC), Arlington, Virginia, United States and Pacific Marine Analysis and Research Association (PacMARA), Victoria, British Columbia, Canada. — newParams","text":"Create new Marxan Input Parameter File (input.dat). See [Marxan User Manual](https://marxansolutions.org/wp-content/uploads/2021/02/Marxan-User-Manual_2021.pdf) information: Serra, N., Kockel, ., Game, E. T., Grantham H., Possingham H.P., & McGowan, J. (2020). Marxan User Manual: Marxan version 2.43 . Nature Conservancy (TNC), Arlington, Virginia, United States Pacific Marine Analysis Research Association (PacMARA), Victoria, British Columbia, Canada.","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/newParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new Marxan Input Parameter File (input.dat). See the [Marxan User Manual](https://marxansolutions.org/wp-content/uploads/2021/02/Marxan-User-Manual_2021.pdf) for more information:\nSerra, N., Kockel, A., Game, E. T., Grantham H., Possingham H.P., & McGowan, J. (2020). Marxan User Manual: For Marxan version 2.43 and above. The Nature Conservancy (TNC), Arlington, Virginia, United States and Pacific Marine Analysis and Research Association (PacMARA), Victoria, British Columbia, Canada. — newParams","text":"","code":"newParams(   BLM = 1,   PROP = 0.5,   RANDSEED = -1,   NUMREPS = 10L,   NUMITNS = 1000000L,   STARTTEMP = -1,   NUMTEMP = 10000,   COSTTHRESH = 0,   THRESHPEN1 = 0,   THRESHPEN2 = 0,   INPUTDIR = \"input\",   PUNAME = \"pu.dat\",   SPECNAME = \"spec.dat\",   PUVSPRNAME = \"puvspr.dat\",   BOUNDNAME = \"bound.dat\",   SCENNAME = \"output\",   SAVERUN = 3L,   SAVEBEST = 3L,   SAVESUMMARY = 3L,   SAVESCEN = 3L,   SAVETARGMET = 3L,   SAVESUMSOLN = 3L,   SAVEPENALTY = 3L,   SAVELOG = 2L,   OUTPUTDIR = \"output\",   RUNMODE = 1L,   MISSLEVEL = 1,   ITIMPTYPE = 0L,   HEURTYPE = -1L,   CLUMPTYPE = 0L,   VERBOSITY = 3L,   SAVESOLUTIONSMATRIX = 3L )"},{"path":"https://remi-daigle.github.io/marxanr/reference/newParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new Marxan Input Parameter File (input.dat). See the [Marxan User Manual](https://marxansolutions.org/wp-content/uploads/2021/02/Marxan-User-Manual_2021.pdf) for more information:\nSerra, N., Kockel, A., Game, E. T., Grantham H., Possingham H.P., & McGowan, J. (2020). Marxan User Manual: For Marxan version 2.43 and above. The Nature Conservancy (TNC), Arlington, Virginia, United States and Pacific Marine Analysis and Research Association (PacMARA), Victoria, British Columbia, Canada. — newParams","text":"BLM numeric value Boundary Length Modifier. Default 1 PROP Proportion planning units initial reserve system. Default 0.5 RANDSEED Random seed number. Default -1 NUMREPS Number (integer) repeat runs (solutions). Default 10L NUMITNS Number (integer) iterations annealing. Default 1000000L STARTTEMP numeric value starting temperature annealing. Default -1 NUMTEMP numeric value temperature decreases annealing. Default 10000 COSTTHRESH numeric value cost threshold. Default 0 THRESHPEN1 numeric value size cost threshold penalty. Default 0 THRESHPEN2 numeric value shape cost threshold penalty. Default 0 INPUTDIR character string naming folder containing input data files. Default \"input\". PUNAME character string naming Planning Unit File. Default \"pu.dat\". SPECNAME character string naming Conservation Feature File. Default \"spec.dat\". PUVSPRNAME character string naming Planning Unit versus Conservation Feature File. Default \"puvspr.dat\". BOUNDNAME character string naming Boundary Length File. Default \"bound.dat\". SCENNAME character string scenario name appended saved output files. Default \"output\". SAVERUN integer code save run. value 0L save file, 1L saves file .dat, 2L saves file .txt, 3L (default) saves file .csv. SAVEBEST integer code save best run. value 0L save file, 1L saves file .dat, 2L saves file .txt, 3L (default) saves file .csv. SAVESUMMARY integer code save summary information. value 0L save file, 1L saves file .dat, 2L saves file .txt, 3L (default) saves file .csv. SAVESCEN integer code save scenario information. value 0L save file, 1L saves file .dat, 2L saves file .txt, 3L (default) saves file .csv. SAVETARGMET integer code save targets met information. value 0L save file, 1L saves file .dat, 2L saves file .txt, 3L (default) saves file .csv. SAVESUMSOLN integer code save summed solution information. value 0L save file, 1L saves file .dat, 2L saves file .txt, 3L (default) saves file .csv. SAVEPENALTY integer code save computed feature penalties. value 0L save file, 1L saves file .dat, 2L saves file .txt, 3L (default) saves file .csv. SAVELOG integer code save log files. value 0L save file, 1L saves file .dat, 2L (default) saves file .txt, 3L saves file .csv. OUTPUTDIR character string naming folder save output files. Default \"output\". RUNMODE Integer code sets run option. 0L Apply Simulated Annealing followed Heuristic; 1L (default) Apply Simulated Annealing followed Iterative Improvement; 2L Apply Simulated Annealing followed Heuristic, followed Iterative Improvement; 3L Use Heuristic; 4L Use Iterative Improvement; 5L Use Heuristic followed Iterative Improvement; 6L Use Simulated Annealing MISSLEVEL numeric proportion representing proportion target conservation feature must reach order reported met. Default value 1 (.e. 100 %) ITIMPTYPE integer code sets iterative improvement. 0L (default) Normal Iterative Improvement; 1L Two Step Iterative Improvement; 2L ‘Swap’ Iterative Improvement; 3L Normal Improvement followed Two Step Iterative Improvement HEURTYPE integer code sets heuristic.0L Richness; 1L Greedy; 2L Max Rarity; 3L Best Rarity; 4L Average Rarity; 5L Sum Rarity; 6L Product Irreplaceability; 7L Summation Irreplaceability CLUMPTYPE integer code sets clumping rule. value 0L (default) Partial clumps count– Clumps smaller target score nothing, 1L Partial clumps count half– Clumps smaller target score half amount, 2L Graduated penalty– Score proportional size clump VERBOSITY integer code sets screen printing options. value 0L Silent Running – title program displayed, 1L Results – Marxan display run , basic results run total run time, 2L General Progress – addition information run, Marxan display information data read well details conservation features whose targets requirements adequately reserved system, 3L (default) Detailed Progress – Shows exactly program gives value system time temperature changes. SAVESOLUTIONSMATRIX integer code save planning units selected run. value 0L save file, 1L saves file .dat, 2L saves file .txt, 3L (default) saves file .csv.","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/newParams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new Marxan Input Parameter File (input.dat). See the [Marxan User Manual](https://marxansolutions.org/wp-content/uploads/2021/02/Marxan-User-Manual_2021.pdf) for more information:\nSerra, N., Kockel, A., Game, E. T., Grantham H., Possingham H.P., & McGowan, J. (2020). Marxan User Manual: For Marxan version 2.43 and above. The Nature Conservancy (TNC), Arlington, Virginia, United States and Pacific Marine Analysis and Research Association (PacMARA), Victoria, British Columbia, Canada. — newParams","text":"'marxanParams' class object","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/newParams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create new Marxan Input Parameter File (input.dat). See the [Marxan User Manual](https://marxansolutions.org/wp-content/uploads/2021/02/Marxan-User-Manual_2021.pdf) for more information:\nSerra, N., Kockel, A., Game, E. T., Grantham H., Possingham H.P., & McGowan, J. (2020). Marxan User Manual: For Marxan version 2.43 and above. The Nature Conservancy (TNC), Arlington, Virginia, United States and Pacific Marine Analysis and Research Association (PacMARA), Victoria, British Columbia, Canada. — newParams","text":"","code":"# Accepting all default values inputdat <- newParams()  # Accepting all default values except BLM inputdat <- newParams(BLM = 1000)"},{"path":"https://remi-daigle.github.io/marxanr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://remi-daigle.github.io/marxanr/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/pu.html","id":null,"dir":"Reference","previous_headings":"","what":"pu — pu","title":"pu — pu","text":"hexagonal planning units created marxanr package demonstrations","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/pu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pu — pu","text":"","code":"pu"},{"path":"https://remi-daigle.github.io/marxanr/reference/pu.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"pu — pu","text":"data frame 2794 rows 2 variables: id character planning unit id geometry list simple features column (sfc) describing planning units","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/pu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"pu — pu","text":"R script create data [data-raw/pu.R](https://github.com/remi-daigle/marxanr/blob/main/data-raw/pu.R)","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/pu_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"pu_dat — pu_dat","title":"pu_dat — pu_dat","text":"marxan formatted planning unit file (e.g. pu.dat)","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/pu_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pu_dat — pu_dat","text":"","code":"pu_dat"},{"path":"https://remi-daigle.github.io/marxanr/reference/pu_dat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"pu_dat — pu_dat","text":"data frame 2794 rows 5 variables: id character planning unit ID cost double cost protect planning unit status double planning unit status xloc double longitude yloc double latitude","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/pu_dat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"pu_dat — pu_dat","text":"R script create data [data-raw/pu_dat.R](https://github.com/remi-daigle/marxanr/blob/main/data-raw/pu_dat.R)","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/puvspr.html","id":null,"dir":"Reference","previous_headings":"","what":"puvspr — puvspr","title":"puvspr — puvspr","text":"marxan formatted species versus planning unit file (e.g. puvspr.dat). Data generated using ecological data layers [Serdynska et al. 2021](https://open.canada.ca/data/en/dataset/2d9cce9a-d634-4b49-879f-87c40c52acf2) used example. data available bioregional-scale ecological human use data used inform draft Marine Protected Area (MPA) design Scotian Shelf-Bay Fundy Bioregion. Please see [original technical report](https://publications.gc.ca/collections/collection_2021/mpo-dfo/Fs97-6-3382-eng.pdf) details. spatial data modified/simplified demonstration purposes used purpose.","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/puvspr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"puvspr — puvspr","text":"","code":"puvspr"},{"path":"https://remi-daigle.github.io/marxanr/reference/puvspr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"puvspr — puvspr","text":"data frame 28689 rows 3 variables: species integer species conservation feature ID pu character planning unit ID amount double amount species conservation feature present planning unit","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/puvspr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"puvspr — puvspr","text":"R script create data [data-raw/spec_and_puvspr.R](https://github.com/remi-daigle/marxanr/blob/main/data-raw/spec_and_puvspr.R)","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/runMarxan.html","id":null,"dir":"Reference","previous_headings":"","what":"runMarxan — runMarxan","title":"runMarxan — runMarxan","text":"runMarxan","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/runMarxan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"runMarxan — runMarxan","text":"","code":"runMarxan(   os = \"win\",   marxanpath = getwd(),   inputdatfile = file.path(marxanpath, \"input.dat\") )"},{"path":"https://remi-daigle.github.io/marxanr/reference/runMarxan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"runMarxan — runMarxan","text":"os character operating system. Either \"win\" (default), \"linux\", \"macos\", \"macosM1\" marxanpath character string directory Marxan executable. Default current working directory. inputdatfile character string file path Marxan input parameter file. Default \"input.dat\" \"marxanpath\" directory. file matches relative path \"inputdatfile\" relative user's current working directory \"marxanpath\" directory, function use file \"marxanpath\" directory.","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/runMarxan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"runMarxan — runMarxan","text":"output files","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/runMarxan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"runMarxan — runMarxan","text":"","code":"runMarxan #> function (os = \"win\", marxanpath = getwd(), inputdatfile = file.path(marxanpath,  #>     \"input.dat\"))  #> { #>     old <- getwd() #>     on.exit(setwd(old)) #>     setwd(marxanpath) #>     if (os == \"win\") { #>         exec <- \"Marxan_x64.exe\" #>     } #>     else if (os == \"linux\") { #>         exec <- \"marxan\" #>         stop(\"This only works on Windows for now!\") #>     } #>     else if (os == \"macos\" | os == \"macosM1\") { #>         exec <- \"marxan\" #>         stop(\"This only works on Windows for now!\") #>     } #>     else { #>         stop(\"This only works on Windows for now!\") #>     } #>     if (!file.exists(exec)) { #>         stop(paste(\"The Marxan executable (\", file.path(getwd(),  #>             exec), \") does not exist. Verify 'os' and 'marxanpath' arguments\")) #>     } #>     if (file.exists(inputdatfile)) { #>         input <- inputdatfile #>     } #>     else if (file.exists(file.path(old, inputdatfile))) { #>         message(paste(\"Interpreting 'inputdatfile' as a relative path to your current working directory:\",  #>             file.path(old, inputdatfile))) #>         input <- file.path(old, inputdatfile) #>     } #>     else { #>         stop(paste(\"The Marxan input parameters file (i.e. input.dat) does not exist (\",  #>             inputdatfile, \"). Verify the 'inputdatfile' argument\")) #>     } #>     system2(exec, args = input) #> } #> <bytecode: 0x55fa6a2ba928> #> <environment: namespace:marxanr>"},{"path":"https://remi-daigle.github.io/marxanr/reference/spec.html","id":null,"dir":"Reference","previous_headings":"","what":"spec — spec","title":"spec — spec","text":"marxan formatted species file (e.g. spec.dat). Data generated using ecological data layers [Serdynska et al. 2021](https://open.canada.ca/data/en/dataset/2d9cce9a-d634-4b49-879f-87c40c52acf2) used example. data available bioregional-scale ecological human use data used inform draft Marine Protected Area (MPA) design Scotian Shelf-Bay Fundy Bioregion. Please see [original technical report](https://publications.gc.ca/collections/collection_2021/mpo-dfo/Fs97-6-3382-eng.pdf) details. spatial data modified/simplified demonstration purposes used purpose.","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spec — spec","text":"","code":"spec"},{"path":"https://remi-daigle.github.io/marxanr/reference/spec.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"spec — spec","text":"data frame 78 rows 4 variables: id integer species conservation feature ID prop double proportion protected spf double species penalty factor name character name species conservation feature","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"spec — spec","text":"R script create data [data-raw/spec_and_puvspr.R](https://github.com/remi-daigle/marxanr/blob/main/data-raw/spec_and_puvspr.R)","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/writeParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Marxan Input Parameter File (input.dat) to disk — writeParams","title":"Write Marxan Input Parameter File (input.dat) to disk — writeParams","text":"Write Marxan Input Parameter File (input.dat) disk","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/writeParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Marxan Input Parameter File (input.dat) to disk — writeParams","text":"","code":"writeParams(inputdat, file = \"input.dat\")"},{"path":"https://remi-daigle.github.io/marxanr/reference/writeParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Marxan Input Parameter File (input.dat) to disk — writeParams","text":"inputdat `marxanParams` class object written disk. `marxanParams` class object can generated using `newParams()` file character string naming file","code":""},{"path":"https://remi-daigle.github.io/marxanr/reference/writeParams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Marxan Input Parameter File (input.dat) to disk — writeParams","text":"","code":"if (FALSE) { inputdat <- newParams(BLM = 1000) writeParams(inputdat,\"input.dat\") }"}]
